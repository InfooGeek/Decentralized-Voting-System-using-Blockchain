{"ast":null,"code":"var _jsxFileName = \"/home/infoogeek/Documents/Voting/dVoting/client/src/component/Admin/StartEnd/StartEnd.js\";\nimport React, { Component } from \"react\";\nimport Navbar from \"../../Navbar/Navigation\";\nimport NavbarAdmin from \"../../Navbar/NavigationAdmin\";\nimport AdminOnly from \"../../AdminOnly\";\nimport getWeb3 from \"../../../getWeb3\";\nimport Election from \"../../../contracts/Election.json\";\nimport \"./StartEnd.css\";\nexport default class StartEnd extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      // refreshing page only once\n      if (!window.location.hash) {\n        window.location = window.location + \"#loaded\";\n        window.location.reload();\n      }\n\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts(); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = Election.networks[networkId];\n        const instance = new web3.eth.Contract(Election.abi, deployedNetwork && deployedNetwork.address); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        this.setState({\n          web3: web3,\n          ElectionInstance: instance,\n          account: accounts[0]\n        }); // Admin info\n\n        const admin = await this.state.ElectionInstance.methods.getAdmin().call();\n\n        if (this.state.account === admin) {\n          this.setState({\n            isAdmin: true\n          });\n        } // Get election start and end values\n\n\n        const start = await this.state.ElectionInstance.methods.getStart().call();\n        this.setState({\n          elStarted: start\n        });\n        const end = await this.state.ElectionInstance.methods.getEnd().call();\n        this.setState({\n          elEnded: end\n        });\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    };\n\n    this.startElection = async () => {\n      await this.state.ElectionInstance.methods.startElection().send({\n        from: this.state.account,\n        gas: 1000000\n      });\n      window.location.reload();\n    };\n\n    this.endElection = async () => {\n      await this.state.ElectionInstance.methods.endElection().send({\n        from: this.state.account,\n        gas: 1000000\n      });\n      window.location.reload();\n    };\n\n    this.state = {\n      ElectionInstance: undefined,\n      web3: null,\n      accounts: null,\n      isAdmin: false,\n      elStarted: false,\n      elEnded: false\n    };\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.isAdmin ? /*#__PURE__*/React.createElement(NavbarAdmin, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(Navbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 51\n        }\n      }), /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }, \"Loading Web3, accounts, and contract...\"));\n    }\n\n    if (!this.state.isAdmin) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(AdminOnly, {\n        page: \"Start and end election page.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavbarAdmin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }), !this.state.elStarted & !this.state.elEnded ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-item info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, \"The election have never been initiated.\")) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, \"Start or end election\"), !this.state.elStarted ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.startElection,\n      className: \"start-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, \"Start \", this.state.elEnded ? \"Again\" : null)), this.state.elEnded ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, \"The election ended.\"))) : null) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }, \"The election started.\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.endElection,\n      className: \"start-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, \"End\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"election-status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, \"Started: \", this.state.elStarted ? \"True\" : \"False\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, \"Ended: \", this.state.elEnded ? \"True\" : \"False\"))));\n  }\n\n}","map":{"version":3,"names":["React","Component","Navbar","NavbarAdmin","AdminOnly","getWeb3","Election","StartEnd","constructor","props","componentDidMount","window","location","hash","reload","web3","accounts","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address","setState","ElectionInstance","account","admin","state","methods","getAdmin","call","isAdmin","start","getStart","elStarted","end","getEnd","elEnded","error","alert","console","startElection","send","from","gas","endElection","undefined","render"],"sources":["/home/infoogeek/Documents/Voting/dVoting/client/src/component/Admin/StartEnd/StartEnd.js"],"sourcesContent":["import React, { Component } from \"react\";\n\nimport Navbar from \"../../Navbar/Navigation\";\nimport NavbarAdmin from \"../../Navbar/NavigationAdmin\";\n\nimport AdminOnly from \"../../AdminOnly\";\n\nimport getWeb3 from \"../../../getWeb3\";\nimport Election from \"../../../contracts/Election.json\";\n\nimport \"./StartEnd.css\";\n\nexport default class StartEnd extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ElectionInstance: undefined,\n      web3: null,\n      accounts: null,\n      isAdmin: false,\n      elStarted: false,\n      elEnded: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    // refreshing page only once\n    if (!window.location.hash) {\n      window.location = window.location + \"#loaded\";\n      window.location.reload();\n    }\n\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = Election.networks[networkId];\n      const instance = new web3.eth.Contract(\n        Election.abi,\n        deployedNetwork && deployedNetwork.address\n      );\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({\n        web3: web3,\n        ElectionInstance: instance,\n        account: accounts[0],\n      });\n\n      // Admin info\n      const admin = await this.state.ElectionInstance.methods.getAdmin().call();\n      if (this.state.account === admin) {\n        this.setState({ isAdmin: true });\n      }\n\n      // Get election start and end values\n      const start = await this.state.ElectionInstance.methods.getStart().call();\n      this.setState({ elStarted: start });\n      const end = await this.state.ElectionInstance.methods.getEnd().call();\n      this.setState({ elEnded: end });\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`\n      );\n      console.error(error);\n    }\n  };\n\n  startElection = async () => {\n    await this.state.ElectionInstance.methods\n      .startElection()\n      .send({ from: this.state.account, gas: 1000000 });\n    window.location.reload();\n  };\n  endElection = async () => {\n    await this.state.ElectionInstance.methods\n      .endElection()\n      .send({ from: this.state.account, gas: 1000000 });\n    window.location.reload();\n  };\n\n  render() {\n    if (!this.state.web3) {\n      return (\n        <>\n          {this.state.isAdmin ? <NavbarAdmin /> : <Navbar />}\n          <center>Loading Web3, accounts, and contract...</center>\n        </>\n      );\n    }\n    if (!this.state.isAdmin) {\n      return (\n        <>\n          <Navbar />\n          <AdminOnly page=\"Start and end election page.\" />\n        </>\n      );\n    }\n    return (\n      <>\n        <NavbarAdmin />\n        {!this.state.elStarted & !this.state.elEnded ? (\n          <div className=\"container-item info\">\n            <center>The election have never been initiated.</center>\n          </div>\n        ) : null}\n        <div className=\"container-main\">\n          <h3>Start or end election</h3>\n          {!this.state.elStarted ? (\n            <>\n              <div className=\"container-item\">\n                <button onClick={this.startElection} className=\"start-btn\">\n                  Start {this.state.elEnded ? \"Again\" : null}\n                </button>\n              </div>\n              {this.state.elEnded ? (\n                <div className=\"container-item\">\n                  <center>\n                    <p>The election ended.</p>\n                  </center>\n                </div>\n              ) : null}\n            </>\n          ) : (\n            <>\n              <div className=\"container-item\">\n                <center>\n                  <p>The election started.</p>\n                </center>\n              </div>\n              <div className=\"container-item\">\n                <button onClick={this.endElection} className=\"start-btn\">\n                  End\n                </button>\n              </div>\n            </>\n          )}\n          <div className=\"election-status\">\n            <p>Started: {this.state.elStarted ? \"True\" : \"False\"}</p>\n            <p>Ended: {this.state.elEnded ? \"True\" : \"False\"}</p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}